/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pbo0901;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.sql.SQLException;
import java.util.Scanner;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author evfi2
 */
public class PBO0901_JFRAME extends javax.swing.JFrame {
    Connection connection = null;
    Statement statement = null;
    ResultSet rs = null;
    Scanner input = new Scanner(System.in);
    public String jdl1;
    public String genre1;
    public String writer1;
    public int selectedRow;
    /**
     * Creates new form PBO0901_JFRAME
     */
    public PBO0901_JFRAME() {
        //dbconnection();
        openConnection();
        initComponents();
        
        setLocationRelativeTo(null);
        
        inpjd.setText("");
        inppng.setText("");
        cbk.addItem("Pilih Genre");
        cbk.addItem("Misteri");
        cbk.addItem("Romantis");
        cbk.addItem("Komedi");
        sb.setText("Submit");
        rst.setText("Reset");
        ubah.setText("Ubah");
        inpcr.setText("");
        cr.setText("Cari");
        showalltable();
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inpjd = new javax.swing.JTextField();
        inppng = new javax.swing.JTextField();
        cbk = new javax.swing.JComboBox<>();
        sb = new javax.swing.JButton();
        rst = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        inpcr = new javax.swing.JTextField();
        cr = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        ubah = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Form Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setText("Judul");

        jLabel2.setText("Pengarang");

        jLabel3.setText("Kategori");

        sb.setText("Submit");
        sb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbActionPerformed(evt);
            }
        });

        rst.setText("Reset");
        rst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rstActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rst))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(inppng, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addComponent(inpjd, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(cbk, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inpjd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inppng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sb, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rst))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel4.setText("Cari Pengarang");

        cr.setText("Cari");
        cr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Judul", "Pengarang", "Kategori"
            }
        ));
        jScrollPane1.setViewportView(table);

        ubah.setText("Ubah");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inpcr, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cr, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ubah)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inpcr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ubah)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Data Buku");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void sbActionPerformed(java.awt.event.ActionEvent evt) {                                   
        if(sb.getText().equals("Submit")){
            if((!inpjd.getText().equals(""))
                    &&(!inppng.getText().equals(""))
                    &&(!String.valueOf(cbk.getSelectedIndex())
                            .equals("Pilih Genre"))){
                String judul = inpjd.getText();
                String pengarang = inppng.getText();
                String kategori = String.valueOf(cbk.getSelectedItem());
                if(!cekexist(judul,pengarang,kategori)){
                    int id = idmaker();
                    cleartable();
                    String query = "insert into buku(id,judul,penulis,genre) values("+id+",'"+judul+"','"+pengarang+"','"+kategori+"');";
                    executestatement(query);
                    showalltable();
                }
            }
            
        }
        else{
            String jdl = inpjd.getText();
            String writer = inppng.getText();
            String genre = String.valueOf(cbk.getSelectedItem());
            if(!cekexist(jdl,writer,genre)){
                cleartable();
                String query = "update buku set judul = '"+jdl+"',PENULIS='"+writer+"',GENRE='"+genre+"' WHERE JUDUL='"+jdl1+"';";
                executestatement(query);
                showalltable();
                sb.setText("Submit");
                
            }
            else if(cekexist(jdl,writer,genre)){
                String pesan = "Buku dengan deskripsi tersebut pernah diinput";
                JOptionPane.showMessageDialog(null, pesan);}
            
        }
        // TODO add your handling code here:
    }                                  

    private void rstActionPerformed(java.awt.event.ActionEvent evt) {                                    
        inpjd.setText("");
        inppng.setText("");
        sb.setText("Submit");
        rst.setText("Reset");
        ubah.setText("Ubah");
        inpcr.setText("");
        cr.setText("Cari");
        cleartable();
        showalltable();
        // TODO add your handling code here:
    }                                   

    private void crActionPerformed(java.awt.event.ActionEvent evt) {                                   
        String cari = inpcr.getText();
        cleartable();
        search(cari);
        
        // TODO add your handling code here:
    }                                  

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {                                     
        sb.setText("Edit");
        selectedRow = table.getSelectedRow();
        jdl1 = String.valueOf(table.getValueAt(selectedRow, 0));
        writer1 = String.valueOf(table.getValueAt(selectedRow, 1));
        genre1 = String.valueOf(table.getValueAt(selectedRow, 2));
        
        inpjd.setText(jdl1);
        inppng.setText(writer1);
        
        
        if(genre1.equals("Romantis"));cbk.setSelectedIndex(2);
        if(genre1.equals("Komedi")) cbk.setSelectedIndex(3);
        if(genre1.equals("Misteri"))cbk.setSelectedIndex(1);
        
        
        // TODO add your handling code here:
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PBO0901_JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PBO0901_JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PBO0901_JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PBO0901_JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PBO0901_JFRAME().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> cbk;
    private javax.swing.JButton cr;
    private javax.swing.JTextField inpcr;
    private javax.swing.JTextField inpjd;
    private javax.swing.JTextField inppng;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton rst;
    private javax.swing.JButton sb;
    private javax.swing.JTable table;
    private javax.swing.JButton ubah;
    // End of variables declaration                   

    public void openConnection(){
            //Connection connection = null;
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                connection = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/db_desktop_pbo09",
                        "root",
                        "");
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
    public void fillTable(String Judul,String Pengarang,String Kategori){
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            model.addRow(new Object[]{Judul,Pengarang,Kategori});

        }

    public void showalltable(){
        String query = "SELECT ID as id,JUDUL as judul,PENULIS as writer,GENRE as genre FROM BUKU;";

            try{
                statement = connection.createStatement();
                rs = statement.executeQuery(query);
                while(rs.next()){
                    String b = rs.getString("judul");
                    String c = rs.getString("writer");
                    String d = rs.getString("genre");
                    fillTable(b,c,d);
                }
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
    }
    public int idmaker(){
        int back=0;
        String query = "select max(id) as id from buku;";
        try{
                statement = connection.createStatement();
                rs = statement.executeQuery(query);
                while(rs.next()){
                    int id = rs.getInt("id");
                    back=id+1;
                }
            }
        catch(Exception ex){
            ex.printStackTrace();
        }
        return back;
    }
    
    public Boolean cekexist(String judul,String Penulis,String genre){
        Boolean back = false;
        String query = "select judul as a, PENULIS as b,genre as c from buku where judul = '"+judul+"' AND penulis = '"+Penulis+"' AND GENRE = '"+genre+"';";
        try{
                statement = connection.createStatement();
                rs = statement.executeQuery(query);
                if(rs.next()){
                    back=true;
                }
            }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
        return back;
        
    }
    public int executestatement(String query){
        int resultCount = 0;
        try{
            statement = connection.createStatement();
            resultCount =statement.executeUpdate(query);
        }
        catch(SQLException ex){
            System.out.println(ex);
        }
        return resultCount;
    }
    public void cleartable(){
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }
    public void search(String yangdicari){
        String query = "select ID as id,JUDUL as judul, PENULIS as penulis,GENRE as genre"
                + " from buku where penulis like '%"+yangdicari+"%';";
        
        
        try{
                statement = connection.createStatement();
                rs = statement.executeQuery(query);
                while(rs.next()){
                    String jdl = rs.getString("judul");
                    String writer = rs.getString("penulis");
                    String genre = rs.getString("genre");
                    fillTable(jdl,writer,genre);
                }
            }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void removetable(int indexrow){
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.removeRow(indexrow);
    
    }
    
}
